//Az arrayPhoto minden egyes elemén végig megyünk az element paraméterrel, majd a thumbnails osztály alá felrajzoljuk az összes img tagot thumbnail classal valamint a data-number attribútumot, melynek átadjuk az element.id integert-t valamint hozzáadjuk az src attribútumot aminek átadjuk az element.photo sztringet.
    
//Bevetzetünk egy setImageClassById függvényt aminek az id paramétert adjuk át. A thumbnail osztály eleméről levesszük az active osztályt. A thumbnails osztály img tagjának data-number attribútumát beállítjuk az id paraméter alapján, majd hozzáadjuk az active osztályt.
${element.description}`//.css({"width" : "700px", "height" : "100px", "background-color" : 
"black"})


   /* 
    let firstDescription = Object.values(arrayPhoto)[0]
    setDescriptionClassById(firstDescription.description)
    $('#photo').append('data-description', firstDescription.description).css({'height' : '100px' , 'position' : 'absolute'})
    console.log(firstDescription.description)
    */

    //Bevezetünk egy firstImage objektumot, ami lényegében a arrayPhoto tömb első eleme. A setImageClassById függvénynek átadjuk a firstImage objektumot melyre pedig mehívjuk a  id propertit. A photo idvel rendelkező tagnak pegig beállítunk egy src attribútumot amely a firstImage objektum photo értékét adja meg, ami egy string. 

            //setDescriptionClassById(currentDescription)   
        //console.log(currentDescription)

                //.append(`<div class="description">${currentDescription}</div>`)   

//Az adott thumbnailre történő kattintáshoz bevezetünk egy függvényt. Megadunk egy imageScr változót amihez hozzárendeljük a rákattintott thumbnail class src attribútumát. Bevezetünk egy currentPhotId változót, amihez hozzárendeljük a kattintott thumbnail data attribútumát, aminek megadjuk a 'number' attributum részét. A setImageClassByIdnek átadjuk a currentPhotoId-t. Majd a photo idvel rendelkező taghoz hozzáadjuk az src attributumot melynek megadjuk az imageScr stringet értéknek. 

//Nyilak kattintása függvény. Bevezetünk egy th (int) változót, amihez hozzárendeljük a thumbnail active osztályra megíhvott data attributumot aminek megadjuk a number részét. Ami egy int. Bevezetünk egy currentIndex változót (int), ehhez hozzárendeljük azt az értéket amit úgy kapunk, hogy az arrayPhoto ra meghívjuk a findIndex() metódust aminek átadjuk ezt : a paraméterre meghívott id egyenlő a th változóval.

      //currentIndex =  7;

      //Ha currenIndex kisebb mint 0 (-1)  akkor arrayPhoto.length-1 et ad meg ami (6), ha viszont a currentIndex nagyobb mint arrayPhoto.length-1 azaz (7) akkor (0) lesz a currentIndex.

      //console.log(currentIndex)
      //console.log(arrayPhoto.length)

            /*
      let descriptionObject = Object.values(arrayPhoto)[currentIndex]
      $('.mainImage').attr("src", arrayPhoto[currentIndex].descriptionObject);
      setImageClassById(descriptionObject.id)
      */

      //Létrehozunk egy photo objektumot az arrayPhoto aktuális indexével ami egy int.
      //A photo idjű html ra meghívjuk az attr funkciót ami hozzácsatol egy src attribútumot aminek az értéke az arrayPhoto nak átadott index értékű photo property. Majd a setImageClassById funkciónak átadjuk a photo objektumot amire meghívjuk annak idjét

              //$('#dsc').attr('src' , arrayPhoto[currentIndex].description)


.description {
    width : 700px;
    height: 50px;
    padding-top: 20px;
    border-radius: 20px;
    margin: 2px;
    text-align: center;
    opacity: 0.7;
    background-color: black;
    color : white
}
.description {
    width : 700px;
    height: 50px;
    padding-top: 20px;
    border-radius: 20px;
    margin: 2px;
    text-align: center;
    opacity: 0.7;
    background-color: black;
    color : white
}




let firstDescription = Object.values(arrayPhoto)[0]
setDescriptionClassById(firstDescription.id)
$('.description').attr("src", firstDescription.description)  

let setDescriptionClassById = (id) => {
    $('.description').removeClass('active')
    $('.descriptions[data-number=' + id +']').addClass('active')
  //  $('#photo .description[data-description=' + description +']').addClass('active')
  }


//$('#photo').append(`<div class="description" data-description="">${elemen
description}</div>`).css({"position" : "absolute" , "width" : "700px" , "height" 
"100px"} )



<div class="gray-container">
    <h1 id="photo-title"></h1>
    <p id="photo-description"></p>
</div>


.thumbnail:hover .title {
    display: block;
}
 
         
         
         $('.thumbnails').append(`<img class="thumbnail" data-number="${element.id}" data-text="${element.title}" src="${element.photo}">`);

/*
$('.thumbnails img[data-number=' + id +']').addClass('active')

$('.hover').each(function(`.data('number')`, idNumber)){
    if (idNumber === currentId) {
        console.log(idNumber)
        console.log(data)
    } else 
};
*/



.gray-container {
    position:absolute;
    justify-content: center;
    width: 700px;
    height: 200px;
    background-color: black;
}



    //hovering over thumbnails
    $('.thumbnail').hover(function(){ 

        let currentId = $(this).data('number')   

        $('.hover:data(currentId)').css('display' , 'flex')

        console.log(currentId)  

    }, function(){
        $('.hover').css('display' , 'none')
    })




/*.thumbnail:hover .data-title {
    display: block;
}

.hovered {

    display: flex;
    justify-content: center;
    width: 740px;
    height: 100px;
    margin-bottom: -40px;
}
.hover {
/
    display:none;
    /*position: relative;*/
    background: grey;
    color: white;
    text-align: center;
    overflow-wrap: break-word;
    /*border-radius: 5px;*/
    margin: 3px;
    padding: 5px;
    height: 40px;
    width: 90px;

}





.hovered:hover .hover {
    display: block;

}

.gray-container {
    position: relative;
    width: 30px;
    height: 30px;
    background-color: gray;
}

.kisKep {
    height: 70px;
    margin: 5px;

}

/*
 
 
 
 
    $(document).ready(function () {
        arrayPhoto.forEach((element) => {
            $('.hovered').append(`<div class="hover" data-number="${element.id}">${element.title} </div>`);
            })



$(document).ready(function () {
        arrayPhoto.forEach((element) => {
            $('.hovered').append(`<div class="hover" data-number="${element.id}">${element.title} </div>`);
            })


$('.left-arrow').click(() => {   
    currentPhoto--;
    if (currentPhoto === -1)  {
        currentPhoto = 6;
        //loadPhoto(currentPhoto)
    }
    console.log(currentPhoto);
    loadPhoto(currentPhoto);
})
************************************************************************************




arrayPhoto.forEach((element, index) => {
    console.log(element.photo);
    $('.thumbnails').append(`<img class"thumbnail" src="${element.photo}">`);
});


$(document).ready(function () {
    $('img').click(function (event) {
     
        $(this).addClass('thumbnail')

     

        let indexClicked = $(event.target).attr('data-number');
        $('#photo').attr("src", arrayPhoto[indexClicked].photo);

       
        //$(this).removeClass('thumbnail')
     

        console.log(indexClicked) 
    })
})















arrayPhoto.forEach((element, index) => {
    console.log(element.photo);
    $('.thumbnails').append(`<img id="${index}" data-number="${index}" src="${element.photo}">`);
});



$('#id').click((event) => {


    let indexClicked = $(event.target).attr('data-number');
    $('#photo').attr("src", arrayPhoto[indexClicked].photo);




        <img class="kisKep" src="images/IMG_20230611_112732.jpg" alt="">
        <img class="kisKep" src="images/20230602_180830.jpg" alt="">
        <img class="kisKep" src="images/IMG_20230514_145629.jpg" alt="">
        <img class="kisKep" src="images/IMG_20230605_180153.jpg" alt="">
        <img class="kisKep" src="images/IMG_20230521_192454.jpg" alt="">
        <img class="kisKep" src="images/IMG_20230602_192214.jpg" alt="">
        <img class="kisKep" src="images/FB_IMG_1686638192493.jpg" alt="">



#main {
    /*display: flex;*/
    width: 50%;
    /*height: 400px;*/
    /*object-fit: cover;*/
    margin: 20px auto;
    /*The @media rule is used in media queries to apply different styles for different media types/devices.*/
    @media screen and (max-width: 480px) {
        width:100%;
    };
}


let data = {
    photo: 'images/IMG_20230611_112732.jpg',
    title: 'Bográcsozás',
    description: 'Tati pörköltet főz az unokákkal',
};


$('#main').append(".left-arrow");
$('.left-arrow').css('margin-left', '90px');
$('#main').attr("src", `${data.photo}`);

$('#main').append(".grey-container");
$('.grey-container').css('width', 'auto' );
$('.grey-container').css('height', '50px' );
$('.grey-container').css('background-color', 'grey' );
$('.grey-container').text(`${data.title}`);


$('#main').css('position', 'absolute');
$('.grey-container').css('position','relative' );

$('#main').append(".right-arrow");
$('.right-arrow').css('transform' , 'scaleX(-1)');















/*
$('.grey-container').append(`<h1>${data.title}</h1>`);
*/

